{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iafol\\\\Documents\\\\Unit1\\\\FS0624-Lezioni\\\\Settimana 10\\\\Lezione 3\\\\netflix\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\nimport { ClipLoader } from 'react-spinners';\n\n// La tua API Key\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '6953698b';\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs';\nconst MovieDetails = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState(\"\");\n  const [rating, setRating] = useState(0);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState(\"\");\n  const [editRating, setEditRating] = useState(1);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\n        if (!movieResponse.ok) throw new Error('Failed to fetch movie details');\n        const movieData = await movieResponse.json();\n        if (movieData.Response === \"True\") {\n          setMovieDetails(movieData);\n        } else {\n          throw new Error(movieData.Error);\n        }\n        const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\n          headers: {\n            'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n          }\n        });\n        if (!commentsResponse.ok) throw new Error('Failed to fetch comments');\n        const commentsData = await commentsResponse.json();\n        setComments(commentsData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  const handleAddComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        },\n        body: JSON.stringify({\n          comment: newComment,\n          rate: rating.toString(),\n          elementId: movieId\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Add Comment Error:', errorText);\n        throw new Error('Failed to add comment');\n      }\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]);\n      setNewComment(\"\");\n      setRating(0);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleUpdateComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${editingCommentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        },\n        body: JSON.stringify({\n          comment: editCommentText,\n          rate: editRating.toString(),\n          elementId: movieId\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Update Comment Error:', errorText);\n        throw new Error('Failed to update comment');\n      }\n      const updatedComment = await response.json();\n      setComments(comments.map(comment => comment._id === editingCommentId ? updatedComment : comment));\n      setEditingCommentId(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const startEditing = comment => {\n    setEditingCommentId(comment._id);\n    setEditCommentText(comment.comment);\n    setEditRating(parseInt(comment.rate));\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Delete Comment Error:', errorText);\n        throw new Error('Failed to delete comment');\n      }\n      setComments(comments.filter(comment => comment._id !== commentId));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-loading\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\",\n        loading: loading,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Poster,\n        alt: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title,\n        className: \"movie-details-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card\",\n          children: editingCommentId === comment._id ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleUpdateComment,\n            className: \"comment-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editCommentText,\n              onChange: e => setEditCommentText(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editRating,\n                onChange: e => setEditRating(parseInt(e.target.value)),\n                min: \"1\",\n                max: \"5\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setEditingCommentId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment-author\",\n              children: comment.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comment-rating\",\n              children: [\"Rating: \", comment.rate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(comment),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddComment,\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add your comment here\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: rating,\n              onChange: e => setRating(parseInt(e.target.value)),\n              min: \"1\",\n              max: \"5\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetails, \"3GyPvHVDdC6/gJf0XHsvbWICUmE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","AUTH_TOKEN","MovieDetails","_s","movieId","movieDetails","setMovieDetails","comments","setComments","loading","setLoading","error","setError","newComment","setNewComment","rating","setRating","editingCommentId","setEditingCommentId","editCommentText","setEditCommentText","editRating","setEditRating","fetchMovieDetails","movieResponse","fetch","ok","Error","movieData","json","Response","commentsResponse","headers","commentsData","err","message","handleAddComment","e","preventDefault","response","method","body","JSON","stringify","comment","rate","toString","elementId","errorText","text","console","addedComment","handleUpdateComment","updatedComment","map","_id","startEditing","parseInt","handleDeleteComment","commentId","filter","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","Title","Year","Genre","Director","Actors","Plot","imdbRating","length","onSubmit","value","onChange","target","required","type","min","max","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/iafol/Documents/Unit1/FS0624-Lezioni/Settimana 10/Lezione 3/netflix/src/components/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n// La tua API Key\r\nconst API_KEY = '6953698b';\r\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs';\r\n\r\nconst MovieDetails = () => {\r\n    const { movieId } = useParams();\r\n    const [movieDetails, setMovieDetails] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [rating, setRating] = useState(0);\r\n    const [editingCommentId, setEditingCommentId] = useState(null);\r\n    const [editCommentText, setEditCommentText] = useState(\"\");\r\n    const [editRating, setEditRating] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const fetchMovieDetails = async () => {\r\n            try {\r\n                const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\r\n                if (!movieResponse.ok) throw new Error('Failed to fetch movie details');\r\n                const movieData = await movieResponse.json();\r\n                if (movieData.Response === \"True\") {\r\n                    setMovieDetails(movieData);\r\n                } else {\r\n                    throw new Error(movieData.Error);\r\n                }\r\n\r\n                const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\r\n                    headers: { 'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs` }\r\n                });\r\n                if (!commentsResponse.ok) throw new Error('Failed to fetch comments');\r\n                const commentsData = await commentsResponse.json();\r\n                setComments(commentsData);\r\n\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n    }, [movieId]);\r\n\r\n    const handleAddComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                },\r\n                body: JSON.stringify({\r\n                    comment: newComment,\r\n                    rate: rating.toString(),\r\n                    elementId: movieId\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Add Comment Error:', errorText);\r\n                throw new Error('Failed to add comment');\r\n            }\r\n\r\n            const addedComment = await response.json();\r\n            setComments([...comments, addedComment]);\r\n            setNewComment(\"\");\r\n            setRating(0);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleUpdateComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${editingCommentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                },\r\n                body: JSON.stringify({\r\n                    comment: editCommentText,\r\n                    rate: editRating.toString(),\r\n                    elementId: movieId\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Update Comment Error:', errorText);\r\n                throw new Error('Failed to update comment');\r\n            }\r\n\r\n            const updatedComment = await response.json();\r\n            setComments(comments.map(comment => comment._id === editingCommentId ? updatedComment : comment));\r\n            setEditingCommentId(null);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const startEditing = (comment) => {\r\n        setEditingCommentId(comment._id);\r\n        setEditCommentText(comment.comment);\r\n        setEditRating(parseInt(comment.rate));\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Delete Comment Error:', errorText);\r\n                throw new Error('Failed to delete comment');\r\n            }\r\n\r\n            setComments(comments.filter(comment => comment._id !== commentId));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-details-container\">\r\n            {loading ? (\r\n                <div className=\"movie-details-loading\">\r\n                    <ClipLoader color=\"#ffffff\" loading={loading} size={50} />\r\n                </div>\r\n            ) : error ? (\r\n                <div className=\"movie-details-error\">\r\n                    <p>Error: {error}</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"movie-details-content\">\r\n                    <img\r\n                        src={movieDetails?.Poster}\r\n                        alt={movieDetails?.Title}\r\n                        className=\"movie-details-poster\"\r\n                    />\r\n                    <div className=\"movie-details-info\">\r\n                        <h1>{movieDetails?.Title}</h1>\r\n                        <p><strong>Year:</strong> {movieDetails?.Year}</p>\r\n                        <p><strong>Genre:</strong> {movieDetails?.Genre}</p>\r\n                        <p><strong>Director:</strong> {movieDetails?.Director}</p>\r\n                        <p><strong>Actors:</strong> {movieDetails?.Actors}</p>\r\n                        <p><strong>Plot:</strong> {movieDetails?.Plot}</p>\r\n                        <p><strong>Rating:</strong> {movieDetails?.imdbRating}</p>\r\n                    </div>\r\n                    <div className=\"movie-details-comments\">\r\n                        <h2>Comments</h2>\r\n                        {comments.length > 0 ? comments.map(comment => (\r\n                            <div key={comment._id} className=\"comment-card\">\r\n                                {editingCommentId === comment._id ? (\r\n                                    <form onSubmit={handleUpdateComment} className=\"comment-form\">\r\n                                        <textarea\r\n                                            value={editCommentText}\r\n                                            onChange={(e) => setEditCommentText(e.target.value)}\r\n                                            required\r\n                                        />\r\n                                        <div className=\"rating-container\">\r\n                                            <label>Rating:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={editRating}\r\n                                                onChange={(e) => setEditRating(parseInt(e.target.value))}\r\n                                                min=\"1\"\r\n                                                max=\"5\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                        <button type=\"submit\">Save</button>\r\n                                        <button type=\"button\" onClick={() => setEditingCommentId(null)}>Cancel</button>\r\n                                    </form>\r\n                                ) : (\r\n                                    <>\r\n                                        <p className=\"comment-author\">{comment.comment}</p>\r\n                                        <p className=\"comment-rating\">Rating: {comment.rate}</p>\r\n                                        <button onClick={() => startEditing(comment)}>Update</button>\r\n                                        <button onClick={() => handleDeleteComment(comment._id)}>Delete</button>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        )) : (\r\n                            <p>No comments yet</p>\r\n                        )}\r\n                        <form onSubmit={handleAddComment} className=\"comment-form\">\r\n                            <textarea\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                                placeholder=\"Add your comment here\"\r\n                                required\r\n                            />\r\n                            <div className=\"rating-container\">\r\n                                <label>Rating:</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={rating}\r\n                                    onChange={(e) => setRating(parseInt(e.target.value))}\r\n                                    min=\"1\"\r\n                                    max=\"5\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Add Comment</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
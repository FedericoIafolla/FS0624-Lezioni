{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iafol\\\\Documents\\\\Unit1\\\\FS0624-Lezioni\\\\Settimana 10\\\\Lezione 3\\\\netflix\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\nimport { ClipLoader } from 'react-spinners';\n\n// La tua API Key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '6953698b';\nconst MovieDetails = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState(\"\"); // Stato per il nuovo commento\n  const [rating, setRating] = useState(0); // Stato per la valutazione\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        // Fetch dei dettagli del film\n        const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\n        if (!movieResponse.ok) {\n          throw new Error('Failed to fetch movie details');\n        }\n        const movieData = await movieResponse.json();\n        if (movieData.Response === \"True\") {\n          setMovieDetails(movieData);\n        } else {\n          throw new Error(movieData.Error);\n        }\n\n        // Fetch dei commenti\n        const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\n          headers: {\n            'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n          }\n        });\n\n        // Controlla il tipo di contenuto della risposta\n        const commentsContentType = commentsResponse.headers.get('Content-Type');\n        if (!commentsResponse.ok) {\n          const errorText = await commentsResponse.text();\n          console.error('Fetch Comments Error:', errorText); // Log del testo dell'errore\n          throw new Error(`Failed to fetch comments: ${errorText}`);\n        }\n        if (commentsContentType && commentsContentType.includes('application/json')) {\n          const commentsData = await commentsResponse.json();\n          setComments(commentsData);\n        } else {\n          throw new Error('Unexpected response format');\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  // Funzione per gestire l'invio del nuovo commento\n  const handleAddComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        },\n        body: JSON.stringify({\n          comment: newComment,\n          rate: rating\n        })\n      });\n\n      // Controlla il tipo di contenuto della risposta\n      const contentType = response.headers.get('Content-Type');\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Add Comment Error:', errorText); // Log del testo dell'errore\n        if (contentType && contentType.includes('application/json')) {\n          const errorResponse = await response.json();\n          throw new Error(errorResponse.message || 'Failed to add comment');\n        } else {\n          throw new Error(`Unexpected response: ${errorText}`);\n        }\n      }\n      if (contentType && contentType.includes('application/json')) {\n        // Se il tipo di contenuto Ã¨ JSON, analizza la risposta come JSON\n        const addedComment = await response.json();\n        setComments([...comments, addedComment]);\n        setNewComment(\"\"); // Resetta il campo del commento\n        setRating(0); // Resetta la valutazione\n      } else {\n        throw new Error('Unexpected response format');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-loading\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\",\n        loading: loading,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Poster,\n        alt: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title,\n        className: \"movie-details-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-author\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-rating\",\n            children: [\"Rating: \", comment.rate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddComment,\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add your comment here\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: rating,\n              onChange: e => setRating(parseInt(e.target.value)),\n              min: \"1\",\n              max: \"10\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetails, \"DzlUyxJDMTiFT66hG5Ya1fNOUOM=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ClipLoader","jsxDEV","_jsxDEV","API_KEY","MovieDetails","_s","movieId","movieDetails","setMovieDetails","comments","setComments","loading","setLoading","error","setError","newComment","setNewComment","rating","setRating","fetchMovieDetails","movieResponse","fetch","ok","Error","movieData","json","Response","commentsResponse","headers","commentsContentType","get","errorText","text","console","includes","commentsData","err","message","handleAddComment","e","preventDefault","response","method","body","JSON","stringify","comment","rate","contentType","errorResponse","addedComment","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","Title","Year","Genre","Director","Actors","Plot","imdbRating","length","map","_id","onSubmit","value","onChange","target","placeholder","required","type","parseInt","min","max","_c","$RefreshReg$"],"sources":["C:/Users/iafol/Documents/Unit1/FS0624-Lezioni/Settimana 10/Lezione 3/netflix/src/components/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n// La tua API Key\r\nconst API_KEY = '6953698b';\r\n\r\nconst MovieDetails = () => {\r\n    const { movieId } = useParams();\r\n    const [movieDetails, setMovieDetails] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [newComment, setNewComment] = useState(\"\");  // Stato per il nuovo commento\r\n    const [rating, setRating] = useState(0); // Stato per la valutazione\r\n\r\n    useEffect(() => {\r\n        const fetchMovieDetails = async () => {\r\n            try {\r\n                // Fetch dei dettagli del film\r\n                const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\r\n                if (!movieResponse.ok) {\r\n                    throw new Error('Failed to fetch movie details');\r\n                }\r\n                const movieData = await movieResponse.json();\r\n\r\n                if (movieData.Response === \"True\") {\r\n                    setMovieDetails(movieData);\r\n                } else {\r\n                    throw new Error(movieData.Error);\r\n                }\r\n\r\n                // Fetch dei commenti\r\n                const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                    }\r\n                });\r\n\r\n                // Controlla il tipo di contenuto della risposta\r\n                const commentsContentType = commentsResponse.headers.get('Content-Type');\r\n                if (!commentsResponse.ok) {\r\n                    const errorText = await commentsResponse.text();\r\n                    console.error('Fetch Comments Error:', errorText); // Log del testo dell'errore\r\n                    throw new Error(`Failed to fetch comments: ${errorText}`);\r\n                }\r\n\r\n                if (commentsContentType && commentsContentType.includes('application/json')) {\r\n                    const commentsData = await commentsResponse.json();\r\n                    setComments(commentsData);\r\n                } else {\r\n                    throw new Error('Unexpected response format');\r\n                }\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n    }, [movieId]);\r\n\r\n    // Funzione per gestire l'invio del nuovo commento\r\n    const handleAddComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                },\r\n                body: JSON.stringify({\r\n                    comment: newComment,\r\n                    rate: rating\r\n                })\r\n            });\r\n\r\n            // Controlla il tipo di contenuto della risposta\r\n            const contentType = response.headers.get('Content-Type');\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Add Comment Error:', errorText); // Log del testo dell'errore\r\n                if (contentType && contentType.includes('application/json')) {\r\n                    const errorResponse = await response.json();\r\n                    throw new Error(errorResponse.message || 'Failed to add comment');\r\n                } else {\r\n                    throw new Error(`Unexpected response: ${errorText}`);\r\n                }\r\n            }\r\n\r\n            if (contentType && contentType.includes('application/json')) {\r\n                // Se il tipo di contenuto Ã¨ JSON, analizza la risposta come JSON\r\n                const addedComment = await response.json();\r\n                setComments([...comments, addedComment]);\r\n                setNewComment(\"\"); // Resetta il campo del commento\r\n                setRating(0); // Resetta la valutazione\r\n            } else {\r\n                throw new Error('Unexpected response format');\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-details-container\">\r\n            {loading ? (\r\n                <div className=\"movie-details-loading\">\r\n                    <ClipLoader color=\"#ffffff\" loading={loading} size={50} />\r\n                </div>\r\n            ) : error ? (\r\n                <div className=\"movie-details-error\">\r\n                    <p>Error: {error}</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"movie-details-content\">\r\n                    <img\r\n                        src={movieDetails?.Poster}\r\n                        alt={movieDetails?.Title}\r\n                        className=\"movie-details-poster\"\r\n                    />\r\n                    <div className=\"movie-details-info\">\r\n                        <h1>{movieDetails?.Title}</h1>\r\n                        <p><strong>Year:</strong> {movieDetails?.Year}</p>\r\n                        <p><strong>Genre:</strong> {movieDetails?.Genre}</p>\r\n                        <p><strong>Director:</strong> {movieDetails?.Director}</p>\r\n                        <p><strong>Actors:</strong> {movieDetails?.Actors}</p>\r\n                        <p><strong>Plot:</strong> {movieDetails?.Plot}</p>\r\n                        <p><strong>Rating:</strong> {movieDetails?.imdbRating}</p>\r\n                    </div>\r\n                    <div className=\"movie-details-comments\">\r\n                        <h2>Comments</h2>\r\n                        {comments.length > 0 ? comments.map(comment => (\r\n                            <div key={comment._id} className=\"comment-card\">\r\n                                <p className=\"comment-author\">{comment.comment}</p>\r\n                                <p className=\"comment-rating\">Rating: {comment.rate}</p>\r\n                            </div>\r\n                        )) : (\r\n                            <p>No comments yet</p>\r\n                        )}\r\n                        <form onSubmit={handleAddComment} className=\"comment-form\">\r\n                            <textarea\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                                placeholder=\"Add your comment here\"\r\n                                required\r\n                            />\r\n                            <div className=\"rating-container\">\r\n                                <label>Rating:</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={rating}\r\n                                    onChange={(e) => setRating(parseInt(e.target.value))}\r\n                                    min=\"1\"\r\n                                    max=\"10\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Add Comment</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
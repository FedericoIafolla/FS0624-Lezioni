{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iafol\\\\Documents\\\\Unit1\\\\FS0624-Lezioni\\\\Settimana 10\\\\Lezione 3\\\\netflix\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ClipLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = '6953698b';\nfunction MovieDetails() {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch dei dettagli del film\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\n        const data = await response.json();\n        if (data.Response === \"True\") {\n          setMovie(data);\n        } else {\n          throw new Error(data.Error);\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Fetch dei commenti (finta API interna)\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`/api/comments/${movieId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchMovieDetails();\n    fetchComments();\n  }, [movieId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\",\n        loading: loading,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#212121',\n      color: '#fff'\n    },\n    children: movie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: movie.Title,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.Plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: comment.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"wr3b+JlIMMMUzMA9+3qTrEbNng0=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","MovieDetails","_s","movieId","movie","setMovie","comments","setComments","loading","setLoading","error","setError","fetchMovieDetails","response","fetch","data","json","Response","Error","err","message","fetchComments","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","backgroundColor","Title","src","Poster","alt","width","Plot","map","comment","index","text","_c","$RefreshReg$"],"sources":["C:/Users/iafol/Documents/Unit1/FS0624-Lezioni/Settimana 10/Lezione 3/netflix/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst API_KEY = '6953698b';\r\n\r\nfunction MovieDetails() {\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch dei dettagli del film\r\n        const fetchMovieDetails = async () => {\r\n            try {\r\n                const response = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\r\n                const data = await response.json();\r\n                if (data.Response === \"True\") {\r\n                    setMovie(data);\r\n                } else {\r\n                    throw new Error(data.Error);\r\n                }\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        // Fetch dei commenti (finta API interna)\r\n        const fetchComments = async () => {\r\n            try {\r\n                const response = await fetch(`/api/comments/${movieId}`);\r\n                const data = await response.json();\r\n                setComments(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n        fetchComments();\r\n    }, [movieId]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"loader-container\">\r\n                <ClipLoader color=\"#ffffff\" loading={loading} size={50} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error-message\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: '20px', backgroundColor: '#212121', color: '#fff' }}>\r\n            {movie && (\r\n                <>\r\n                    <h2>{movie.Title}</h2>\r\n                    <img src={movie.Poster} alt={movie.Title} style={{ width: '300px' }} />\r\n                    <p>{movie.Plot}</p>\r\n                    <h3>Comments:</h3>\r\n                    <ul>\r\n                        {comments.map((comment, index) => (\r\n                            <li key={index}>{comment.text}</li>\r\n                        ))}\r\n                    </ul>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iafol\\\\Documents\\\\Unit1\\\\FS0624-Lezioni\\\\Settimana 10\\\\Lezione 3\\\\netflix\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\nimport { ClipLoader } from 'react-spinners';\n\n// La tua API Key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '6953698b';\n\n// Token di autenticazione\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs';\nconst MovieDetails = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState(\"\"); // Stato per il nuovo commento\n  const [rating, setRating] = useState(0); // Stato per la valutazione\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        // Fetch dei dettagli del film\n        const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\n        if (!movieResponse.ok) {\n          throw new Error('Failed to fetch movie details');\n        }\n        const movieData = await movieResponse.json();\n        if (movieData.Response === \"True\") {\n          setMovieDetails(movieData);\n        } else {\n          throw new Error(movieData.Error);\n        }\n\n        // Fetch dei commenti per il film specifico\n        const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\n          headers: {\n            'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n          }\n        });\n        if (!commentsResponse.ok) {\n          if (commentsResponse.status === 401) {\n            throw new Error(\"Unauthorized access - Please check your token.\");\n          } else {\n            throw new Error('Failed to fetch comments');\n          }\n        }\n        const commentsData = await commentsResponse.json();\n        setComments(commentsData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  // Funzione per gestire l'invio del nuovo commento\n  const handleAddComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        },\n        body: JSON.stringify({\n          comment: newComment,\n          rate: rating.toString(),\n          // Converti il rating in stringa\n          elementId: movieId\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Add Comment Error:', errorText);\n        throw new Error('Failed to add comment');\n      }\n\n      // Aggiungi il nuovo commento alla lista dei commenti\n      const addedComment = await response.json();\n      setComments([...comments, addedComment]);\n      setNewComment(\"\"); // Resetta il campo del commento\n      setRating(0); // Resetta la valutazione\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Funzione per gestire l'aggiornamento di un commento\n  const handleUpdateComment = async (commentId, updatedComment) => {\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        },\n        body: JSON.stringify(updatedComment)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Update Comment Error:', errorText);\n        throw new Error('Failed to update comment');\n      }\n\n      // Aggiorna il commento nella lista dei commenti\n      const updatedData = await response.json();\n      setComments(comments.map(comment => comment._id === commentId ? updatedData : comment));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Funzione per gestire la rimozione di un commento\n  const handleDeleteComment = async commentId => {\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Delete Comment Error:', errorText);\n        throw new Error('Failed to delete comment');\n      }\n\n      // Rimuovi il commento dalla lista dei commenti\n      setComments(comments.filter(comment => comment._id !== commentId));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details-container\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-loading\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\",\n        loading: loading,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Poster,\n        alt: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title,\n        className: \"movie-details-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Director:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Actors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 28\n          }, this), \" \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-details-comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-author\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-rating\",\n            children: [\"Rating: \", comment.rate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateComment(comment._id, {\n              ...comment,\n              rate: '4'\n            }),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteComment(comment._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No comments yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddComment,\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add your comment here\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: rating,\n              onChange: e => setRating(parseInt(e.target.value)),\n              min: \"1\",\n              max: \"5\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetails, \"DzlUyxJDMTiFT66hG5Ya1fNOUOM=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ClipLoader","jsxDEV","_jsxDEV","API_KEY","AUTH_TOKEN","MovieDetails","_s","movieId","movieDetails","setMovieDetails","comments","setComments","loading","setLoading","error","setError","newComment","setNewComment","rating","setRating","fetchMovieDetails","movieResponse","fetch","ok","Error","movieData","json","Response","commentsResponse","headers","status","commentsData","err","message","handleAddComment","e","preventDefault","response","method","body","JSON","stringify","comment","rate","toString","elementId","errorText","text","console","addedComment","handleUpdateComment","commentId","updatedComment","updatedData","map","_id","handleDeleteComment","filter","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","Title","Year","Genre","Director","Actors","Plot","imdbRating","length","onClick","onSubmit","value","onChange","target","placeholder","required","type","parseInt","min","max","_c","$RefreshReg$"],"sources":["C:/Users/iafol/Documents/Unit1/FS0624-Lezioni/Settimana 10/Lezione 3/netflix/src/components/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './MovieDetails.css'; // Assicurati di avere il percorso corretto\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n// La tua API Key\r\nconst API_KEY = '6953698b';\r\n\r\n// Token di autenticazione\r\nconst AUTH_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs';\r\n\r\nconst MovieDetails = () => {\r\n    const { movieId } = useParams();\r\n    const [movieDetails, setMovieDetails] = useState(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [newComment, setNewComment] = useState(\"\");  // Stato per il nuovo commento\r\n    const [rating, setRating] = useState(0); // Stato per la valutazione\r\n\r\n    useEffect(() => {\r\n        const fetchMovieDetails = async () => {\r\n            try {\r\n                // Fetch dei dettagli del film\r\n                const movieResponse = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${movieId}`);\r\n                if (!movieResponse.ok) {\r\n                    throw new Error('Failed to fetch movie details');\r\n                }\r\n                const movieData = await movieResponse.json();\r\n\r\n                if (movieData.Response === \"True\") {\r\n                    setMovieDetails(movieData);\r\n                } else {\r\n                    throw new Error(movieData.Error);\r\n                }\r\n\r\n                // Fetch dei commenti per il film specifico\r\n                const commentsResponse = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${movieId}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                    }\r\n                });\r\n                if (!commentsResponse.ok) {\r\n                    if (commentsResponse.status === 401) {\r\n                        throw new Error(\"Unauthorized access - Please check your token.\");\r\n                    } else {\r\n                        throw new Error('Failed to fetch comments');\r\n                    }\r\n                }\r\n                const commentsData = await commentsResponse.json();\r\n                setComments(commentsData);\r\n\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMovieDetails();\r\n    }, [movieId]);\r\n\r\n    // Funzione per gestire l'invio del nuovo commento\r\n    const handleAddComment = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                },\r\n                body: JSON.stringify({\r\n                    comment: newComment,\r\n                    rate: rating.toString(), // Converti il rating in stringa\r\n                    elementId: movieId\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Add Comment Error:', errorText);\r\n                throw new Error('Failed to add comment');\r\n            }\r\n\r\n            // Aggiungi il nuovo commento alla lista dei commenti\r\n            const addedComment = await response.json();\r\n            setComments([...comments, addedComment]);\r\n            setNewComment(\"\"); // Resetta il campo del commento\r\n            setRating(0); // Resetta la valutazione\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Funzione per gestire l'aggiornamento di un commento\r\n    const handleUpdateComment = async (commentId, updatedComment) => {\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                },\r\n                body: JSON.stringify(updatedComment)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Update Comment Error:', errorText);\r\n                throw new Error('Failed to update comment');\r\n            }\r\n\r\n            // Aggiorna il commento nella lista dei commenti\r\n            const updatedData = await response.json();\r\n            setComments(comments.map(comment => comment._id === commentId ? updatedData : comment));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Funzione per gestire la rimozione di un commento\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${commentId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmNmMjA2MjAwOGQxMDAwMTVkZDNiNGUiLCJpYXQiOjE3MjQ4NTAyNzQsImV4cCI6MTcyNjA1OTg3NH0.KFK9aex6ISFoXbsSZTo8JIeub5YxMMR-UgydUsklpAs`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Delete Comment Error:', errorText);\r\n                throw new Error('Failed to delete comment');\r\n            }\r\n\r\n            // Rimuovi il commento dalla lista dei commenti\r\n            setComments(comments.filter(comment => comment._id !== commentId));\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"movie-details-container\">\r\n            {loading ? (\r\n                <div className=\"movie-details-loading\">\r\n                    <ClipLoader color=\"#ffffff\" loading={loading} size={50} />\r\n                </div>\r\n            ) : error ? (\r\n                <div className=\"movie-details-error\">\r\n                    <p>Error: {error}</p>\r\n                </div>\r\n            ) : (\r\n                <div className=\"movie-details-content\">\r\n                    <img\r\n                        src={movieDetails?.Poster}\r\n                        alt={movieDetails?.Title}\r\n                        className=\"movie-details-poster\"\r\n                    />\r\n                    <div className=\"movie-details-info\">\r\n                        <h1>{movieDetails?.Title}</h1>\r\n                        <p><strong>Year:</strong> {movieDetails?.Year}</p>\r\n                        <p><strong>Genre:</strong> {movieDetails?.Genre}</p>\r\n                        <p><strong>Director:</strong> {movieDetails?.Director}</p>\r\n                        <p><strong>Actors:</strong> {movieDetails?.Actors}</p>\r\n                        <p><strong>Plot:</strong> {movieDetails?.Plot}</p>\r\n                        <p><strong>Rating:</strong> {movieDetails?.imdbRating}</p>\r\n                    </div>\r\n                    <div className=\"movie-details-comments\">\r\n                        <h2>Comments</h2>\r\n                        {comments.length > 0 ? comments.map(comment => (\r\n                            <div key={comment._id} className=\"comment-card\">\r\n                                <p className=\"comment-author\">{comment.comment}</p>\r\n                                <p className=\"comment-rating\">Rating: {comment.rate}</p>\r\n                                {/* Pulsanti per aggiornare e rimuovere commenti */}\r\n                                <button onClick={() => handleUpdateComment(comment._id, { ...comment, rate: '4' })}>Update</button>\r\n                                <button onClick={() => handleDeleteComment(comment._id)}>Delete</button>\r\n                            </div>\r\n                        )) : (\r\n                            <p>No comments yet</p>\r\n                        )}\r\n                        <form onSubmit={handleAddComment} className=\"comment-form\">\r\n                            <textarea\r\n                                value={newComment}\r\n                                onChange={(e) => setNewComment(e.target.value)}\r\n                                placeholder=\"Add your comment here\"\r\n                                required\r\n                            />\r\n                            <div className=\"rating-container\">\r\n                                <label>Rating:</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={rating}\r\n                                    onChange={(e) => setRating(parseInt(e.target.value))}\r\n                                    min=\"1\"\r\n                                    max=\"5\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Add Comment</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}